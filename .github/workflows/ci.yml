name: CI Checks (Test & Build)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Use the Node.js version specified in your package.json engines field
        node-version: [22.x] # Keep consistent with your project requirement

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Use latest version

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4 # Use latest version
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Add npm caching

      - name: Install Dependencies
        run: npm ci # Use ci for faster, deterministic installs in CI

      - name: Run Tests
        run: npm run test -- --run # Add --run to execute tests once, not watch mode
        env:
          # --- ADD THIS DUMMY KEY ---
          # Provide a non-empty placeholder for SDK initialization.
          # The actual value doesn't matter since tests mock Firebase calls.
          VITE_FIREBASE_API_KEY: "dummy-test-key-for-ci"
          # Add other VITE_ variables if your firebase.js config relies on them
          # even with mocks (usually apiKey is sufficient for init)
          # VITE_FIREBASE_PROJECT_ID: "dummy-project"
          # VITE_FIREBASE_AUTH_DOMAIN: "dummy-domain"
          # ... etc ...

      - name: Build Project
        run: npm run build --if-present
        env:
          # Provide dummy keys for build step as well, if needed
          VITE_FIREBASE_API_KEY: "dummy-build-key-for-ci"
          # ... other VITE_ variables ...

      # Optional: Upload build artifact if needed for deployment later
      # - name: Archive production artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: build-output
      #     path: dist/

